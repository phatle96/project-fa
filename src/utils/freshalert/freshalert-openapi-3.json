{
  "openapi": "3.0.0",
  "paths": {
    "/version/version": {
      "get": {
        "operationId": "VersionController_getVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get current version"
          }
        },
        "tags": [
          "Version"
        ]
      }
    },
    "/user/me": {
      "get": {
        "operationId": "UserController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get current user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/users": {
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [
          {
            "name": "p",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "l",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return users."
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get users",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return user."
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get user by id.",
        "tags": [
          "User"
        ]
      }
    },
    "/user/name/{name}": {
      "get": {
        "operationId": "UserController_userByName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return user."
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get user by name.",
        "tags": [
          "User"
        ]
      }
    },
    "/product-code/{code}": {
      "get": {
        "operationId": "BarcodeController_findBarcodeByOff",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codeType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BarcodeResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "429": {
            "description": "Too many requests. Please try again later."
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get product by Barcode",
        "tags": [
          "Product-code"
        ]
      },
      "delete": {
        "operationId": "BarcodeController_deleteProductByBarcode",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BarcodeResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Delete product by Barcode",
        "tags": [
          "Product-code"
        ]
      }
    },
    "/product-code/search/{query}": {
      "get": {
        "operationId": "BarcodeController_search",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OpenFoodSearchResultDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "429": {
            "description": "Too many requests. Please try again later."
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Search Open Food Facts products",
        "tags": [
          "Product-code"
        ]
      }
    },
    "/product-code": {
      "post": {
        "operationId": "BarcodeController_createProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBarcodeInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BarcodeResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product is not created"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Create product by barcode",
        "tags": [
          "Product-code"
        ]
      }
    },
    "/key-phrase": {
      "post": {
        "operationId": "KeyPhraseController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyPhraseInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/KeyPhraseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Create Key-phrase",
        "tags": [
          "KeyPhrase"
        ]
      },
      "get": {
        "operationId": "KeyPhraseController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KeyPhraseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Key-phrase not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get all Key-phrase",
        "tags": [
          "KeyPhrase"
        ]
      },
      "delete": {
        "operationId": "KeyPhraseController_remove",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Delete Hard all Key-phrase success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Key-phrase not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Delete Hard all Key-phrase, just use this api if you deep-know database",
        "tags": [
          "KeyPhrase"
        ]
      }
    },
    "/key-phrase/{id}": {
      "get": {
        "operationId": "KeyPhraseController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KeyPhraseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Key-phrase not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get Key-phrase by Id",
        "tags": [
          "KeyPhrase"
        ]
      },
      "delete": {
        "operationId": "KeyPhraseController_removeSoft",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete-soft Key-phrase success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Key-phrase is not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Delete-soft Key-phrase by ID",
        "tags": [
          "KeyPhrase"
        ]
      }
    },
    "/images/upload": {
      "post": {
        "operationId": "ImageController_uploadImage",
        "parameters": [
          {
            "name": "code",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pictureUrl": {
                    "type": "string",
                    "format": "url",
                    "nullable": true
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImageUploadsResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Save image via url or file",
        "tags": [
          "Images"
        ]
      }
    },
    "/date": {
      "post": {
        "operationId": "DateController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDateProductUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DateResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Create date",
        "tags": [
          "Date"
        ]
      },
      "get": {
        "operationId": "DateController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DateResponseModel"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get all date",
        "tags": [
          "Date"
        ]
      }
    },
    "/date/user": {
      "get": {
        "operationId": "DateController_findAllByUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DateResponseModel"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get all date by User",
        "tags": [
          "Date"
        ]
      }
    },
    "/date/{id}": {
      "get": {
        "operationId": "DateController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DateResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get date by id",
        "tags": [
          "Date"
        ]
      },
      "put": {
        "operationId": "DateController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDateProductUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DateResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Update date by id",
        "tags": [
          "Date"
        ]
      }
    },
    "/date/extract": {
      "post": {
        "operationId": "DateController_extract",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "textOCR": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "country_code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DateExtractResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Extract date via TextOCR",
        "tags": [
          "Date"
        ]
      }
    },
    "/date/calculate-quantity/{dateId}": {
      "put": {
        "operationId": "DateController_calculateQuantity",
        "parameters": [
          {
            "name": "dateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "calculus": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DateResponseModel"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Calculate quantity",
        "tags": [
          "Date"
        ]
      }
    },
    "/product": {
      "get": {
        "operationId": "ProductController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get all Product",
        "tags": [
          "Product"
        ]
      },
      "delete": {
        "operationId": "ProductController_removeAll",
        "parameters": [],
        "responses": {
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Hard-remove all product",
        "tags": [
          "Product"
        ]
      }
    },
    "/product/user": {
      "get": {
        "operationId": "ProductController_findAllByUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get Product list by user",
        "tags": [
          "Product"
        ]
      },
      "delete": {
        "operationId": "ProductController_removeAllByUser",
        "parameters": [],
        "responses": {
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Hard-remove all product by user",
        "tags": [
          "Product"
        ]
      }
    },
    "/product/user/expired": {
      "get": {
        "operationId": "ProductController_findAllByUserLookbackDays",
        "parameters": [
          {
            "name": "days",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get Product list by user with lookback day",
        "tags": [
          "Product"
        ]
      }
    },
    "/product/soft-delete": {
      "delete": {
        "operationId": "ProductController_softDeleteByArrProductIds",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "All Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Soft delete multiple products by IDs",
        "tags": [
          "Product"
        ]
      }
    },
    "/product/soft-delete/{id}": {
      "delete": {
        "operationId": "ProductController_softDeleteById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Soft-delete by ID",
        "tags": [
          "Product"
        ]
      }
    },
    "/product/{id}": {
      "delete": {
        "operationId": "ProductController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Hard-remove product by id",
        "tags": [
          "Product"
        ]
      }
    },
    "/firebase-messages/private/user": {
      "post": {
        "operationId": "FirebaseMessageController_migrateCurrentUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseUserInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Migrate current user success"
          },
          "404": {
            "description": "User is not migrated"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Migrate current user",
        "tags": [
          "Firebase"
        ]
      }
    },
    "/firebase-messages/private/CloudMessaging/{code}": {
      "post": {
        "operationId": "FirebaseMessageController_sendMessage",
        "parameters": [
          {
            "name": "code",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "days",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Send message success!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Send message server not found error"
          },
          "500": {
            "description": "Send message server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Send message user with code = 1: toOne, code = 2: ToMany, code = 3: ToAll (default), This api just use for BACK-END, for get access token of api Firebase",
        "tags": [
          "Firebase"
        ]
      }
    },
    "/serpapi/reserve-image": {
      "post": {
        "operationId": "SerpApiController_reverseImageSearch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReverseImageDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "429": {
            "description": "Too many requests. Please try again later."
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Search related images",
        "tags": [
          "SerpApi-Reserve-Image"
        ]
      }
    },
    "/serpapi/product-info": {
      "get": {
        "operationId": "SerpApiController_getInformationProduct",
        "parameters": [
          {
            "name": "title",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResponseModel"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SerapiResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "429": {
            "description": "Too many requests. Please try again later."
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "manual-auth": []
          }
        ],
        "summary": "Get Open Food Fact product information",
        "tags": [
          "SerpApi-Reserve-Image"
        ]
      }
    },
    "/food-data-central/v1/foods": {
      "get": {
        "operationId": "FoodDataCentralController_findByListFdcIds",
        "parameters": [
          {
            "name": "fdcIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "Optional. 'abridged' for an abridged set of elements, 'full' for all elements (default).",
            "schema": {
              "enum": [
                "abridged",
                "full"
              ],
              "type": "string"
            }
          },
          {
            "name": "nutrients",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not found"
          },
          "429": {
            "description": "Too many requests, just call this api 100 times per minute"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get information from the food data by List FdcId",
        "tags": [
          "Food Data Central API"
        ]
      }
    },
    "/food-data-central/v1/foods/{fdcId}": {
      "get": {
        "operationId": "FoodDataCentralController_findById",
        "parameters": [
          {
            "name": "fdcId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not found"
          },
          "429": {
            "description": "Too many requests, just call this api 100 times per minute"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Get information from the food data by FdcId",
        "tags": [
          "Food Data Central API"
        ]
      }
    },
    "/food-data-central/v1/foods/search": {
      "get": {
        "description": "Search for foods using keywords. Results can be filtered by dataType and there are options for result page sizes or sorting.",
        "operationId": "getFoodsSearch",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "description": "One or more search terms. The string may include search operators.",
            "schema": {
              "example": "cheddar cheese",
              "type": "string"
            }
          },
          {
            "name": "dataType",
            "required": false,
            "in": "query",
            "description": "Optional. Filter on a specific data type; specify one or more values in an array.",
            "schema": {
              "minItems": 1,
              "maxItems": 4,
              "example": [
                "Foundation",
                "SR Legacy"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Branded",
                  "Foundation",
                  "Survey (FNDDS)",
                  "SR Legacy"
                ]
              }
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Optional. Maximum number of results to return for the current page. Default is 50.",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "example": 25,
              "type": "number"
            }
          },
          {
            "name": "pageNumber",
            "required": false,
            "in": "query",
            "description": "Optional. Page number to retrieve.",
            "schema": {
              "default": 1,
              "example": 2,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Optional. Specify one of the possible values to sort by that field.",
            "schema": {
              "example": "dataType.keyword",
              "type": "string",
              "enum": [
                "dataType.keyword",
                "lowercaseDescription.keyword",
                "fdcId",
                "publishedDate"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Optional. The sort direction for the results. Only applicable if sortBy is specified.",
            "schema": {
              "example": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "brandOwner",
            "required": false,
            "in": "query",
            "description": "Optional. Filter results based on the brand owner of the food. Only applies to Branded Foods",
            "schema": {
              "example": "Kar Nut Products Company",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of foods that matched search terms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad input parameter"
          }
        },
        "summary": "Returns a list of foods that matched search (query) keywords",
        "tags": [
          "Food Data Central API"
        ]
      }
    }
  },
  "info": {
    "title": "Your API Title",
    "description": "Your API Description",
    "version": "1.2.0-beta",
    "contact": {

    }
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "manual-auth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Manually enter the token (e.g. Bearer eyJhbGci...)"
      }
    },
    "schemas": {
      "ResponseModel": {
        "type": "object",
        "properties": {
          "res": {
            "type": "number",
            "example": 1
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "res"
        ]
      },
      "IngredientDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "offId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "originCountry": {
            "type": "string",
            "nullable": true
          },
          "isAllergen": {
            "type": "boolean",
            "nullable": true
          },
          "dateCreated": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "offId",
          "name",
          "description",
          "originCountry",
          "isAllergen",
          "dateCreated"
        ]
      },
      "OpenFoodProductSummaryDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "product_name": {
            "type": "string",
            "nullable": true
          },
          "brands": {
            "type": "string",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BarcodeResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "codeNumber": {
            "type": "string",
            "nullable": true
          },
          "codeType": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientDto"
            }
          },
          "nutritionFact": {
            "type": "string",
            "nullable": true
          },
          "usageInstruction": {
            "type": "string",
            "nullable": true
          },
          "storageInstruction": {
            "type": "string",
            "nullable": true
          },
          "countryOfOrigin": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "nullable": true,
            "items": {
              "type": "array"
            },
            "type": "array"
          },
          "count": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "page_count": {
            "type": "number"
          },
          "page_size": {
            "type": "number"
          },
          "skip": {
            "type": "number"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenFoodProductSummaryDto"
            }
          }
        },
        "required": [
          "id",
          "codeNumber",
          "codeType",
          "productName",
          "brand",
          "manufacturer",
          "description",
          "ingredients",
          "nutritionFact",
          "usageInstruction",
          "storageInstruction",
          "countryOfOrigin",
          "category",
          "imageUrl",
          "count",
          "page",
          "page_count",
          "page_size",
          "skip",
          "products"
        ]
      },
      "OpenFoodSearchResultDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "nullable": true
          },
          "page": {
            "type": "number",
            "nullable": true
          },
          "page_count": {
            "type": "number",
            "nullable": true
          },
          "page_size": {
            "type": "number",
            "nullable": true
          },
          "skip": {
            "type": "number",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenFoodProductSummaryDto"
            }
          }
        },
        "required": [
          "products"
        ]
      },
      "CreateBarcodeInputDto": {
        "type": "object",
        "properties": {
          "codeNumber": {
            "type": "string",
            "description": "Code number of the product"
          },
          "codeType": {
            "type": "object",
            "description": "Code type (optional)"
          },
          "productName": {
            "type": "object",
            "description": "Product name (optional)"
          },
          "brand": {
            "type": "object"
          },
          "manufacturer": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientDto"
            }
          },
          "nutritionFact": {
            "type": "object"
          },
          "usageInstruction": {
            "type": "object"
          },
          "storageInstruction": {
            "type": "object"
          },
          "countryOfOrigin": {
            "type": "object"
          },
          "category": {
            "type": "object"
          },
          "labelKey": {
            "type": "object"
          },
          "phrase": {
            "type": "object"
          },
          "imageUrl": {
            "nullable": true,
            "items": {
              "type": "array"
            },
            "type": "array"
          }
        },
        "required": [
          "codeNumber"
        ]
      },
      "KeyPhraseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false
          },
          "keyLabel": {
            "type": "string"
          },
          "phrase": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "keyLabel",
          "phrase",
          "countryCode"
        ]
      },
      "KeyPhraseInputDto": {
        "type": "object",
        "properties": {
          "keyLabel": {
            "type": "string"
          },
          "phrase": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        },
        "required": [
          "keyLabel",
          "phrase",
          "countryCode"
        ]
      },
      "ImageUploadsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false
          },
          "success": {
            "type": "boolean",
            "nullable": false
          },
          "imagePath": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "success",
          "imagePath",
          "message",
          "productId"
        ]
      },
      "DateResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "description": "Product ID (UUID)"
          },
          "dateManufactured": {
            "type": "string",
            "format": "date-time"
          },
          "dateBestBefore": {
            "type": "string",
            "format": "date-time"
          },
          "dateExpired": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "example": 5
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateDateProductUserDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID (UUID)"
          },
          "dateManufactured": {
            "type": "string",
            "format": "date-time"
          },
          "dateBestBefore": {
            "type": "string",
            "format": "date-time"
          },
          "dateExpired": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "default": 1
          }
        },
        "required": [
          "productId"
        ]
      },
      "UpdateDateProductUserDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID (UUID)"
          },
          "dateManufactured": {
            "type": "string",
            "format": "date-time"
          },
          "dateBestBefore": {
            "type": "string",
            "format": "date-time"
          },
          "dateExpired": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "DateExtractResponseDto": {
        "type": "object",
        "properties": {
          "dateManufactured": {
            "type": "string",
            "format": "date-time",
            "description": "Manufacture date"
          },
          "dateExpired": {
            "type": "string",
            "format": "date-time",
            "description": "Manufacture date"
          },
          "dateBestBefore": {
            "type": "string",
            "format": "date-time",
            "description": "Manufacture date"
          }
        }
      },
      "ProductResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "codeNumber": {
            "type": "string",
            "nullable": true
          },
          "codeType": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usageInstruction": {
            "type": "string",
            "nullable": true
          },
          "storageInstruction": {
            "type": "string",
            "nullable": true
          },
          "countryOfOrigin": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "nutritionFact": {
            "type": "string",
            "nullable": true
          },
          "labelKey": {
            "type": "string",
            "nullable": true
          },
          "phrase": {
            "type": "string",
            "nullable": true
          },
          "dateProductUsers": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateResponseModel"
            }
          }
        },
        "required": [
          "id",
          "codeNumber",
          "codeType",
          "productName",
          "brand",
          "manufacturer",
          "description",
          "imageUrl",
          "usageInstruction",
          "storageInstruction",
          "countryOfOrigin",
          "category",
          "nutritionFact",
          "labelKey",
          "phrase",
          "dateProductUsers"
        ]
      },
      "FirebaseUserModel": {
        "type": "object",
        "properties": {
          "bearerToken": {
            "type": "string",
            "nullable": true
          },
          "firebaseAppId": {
            "type": "string",
            "nullable": true
          },
          "fcmToken": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "bearerToken",
          "firebaseAppId",
          "fcmToken"
        ]
      },
      "FirebaseUserInputModel": {
        "type": "object",
        "properties": {
          "fcmToken": {
            "type": "string"
          }
        },
        "required": [
          "fcmToken"
        ]
      },
      "PriceDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "extracted_value": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "extracted_value",
          "currency"
        ]
      },
      "ReverseImageElementResult": {
        "type": "object",
        "properties": {
          "position": {
            "type": "number",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "thumbnail_width": {
            "type": "number",
            "nullable": true
          },
          "thumbnail_height": {
            "type": "number",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "image_width": {
            "type": "number",
            "nullable": true
          },
          "image_height": {
            "type": "number",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "pageUrl": {
            "type": "string",
            "nullable": true
          },
          "redirect_link": {
            "type": "string",
            "nullable": true
          },
          "displayed_link": {
            "type": "string",
            "nullable": true
          },
          "snippet": {
            "type": "string",
            "nullable": true
          },
          "snippet_highlighted_words": {
            "type": "string",
            "nullable": true
          },
          "favicon": {
            "type": "string",
            "nullable": true
          },
          "source_icon": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "nullable": true
          },
          "reviews": {
            "type": "number",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          },
          "in_stock": {
            "type": "boolean",
            "example": true,
            "default": true,
            "nullable": false
          },
          "condition": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "position",
          "title",
          "thumbnail",
          "thumbnail_width",
          "thumbnail_height",
          "link",
          "image",
          "image_width",
          "image_height",
          "source",
          "date",
          "pageUrl",
          "redirect_link",
          "displayed_link",
          "snippet",
          "snippet_highlighted_words",
          "favicon",
          "source_icon",
          "rating",
          "reviews",
          "in_stock",
          "condition"
        ]
      },
      "ReverseImageDto": {
        "type": "object",
        "properties": {
          "search_metadata": {
            "type": "object"
          },
          "search_parameters": {
            "type": "object"
          },
          "image_sizes": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "image_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReverseImageElementResult"
            }
          },
          "visual_matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReverseImageElementResult"
            }
          },
          "related_content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReverseImageElementResult"
            }
          }
        }
      },
      "SerapiResponseDto": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "brand_tags": {
            "type": "string",
            "nullable": true
          },
          "search_terms": {
            "type": "string",
            "nullable": true
          },
          "query_nl": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "number",
            "nullable": true
          },
          "page": {
            "type": "number",
            "nullable": true
          },
          "page_count": {
            "type": "number",
            "nullable": true
          },
          "page_size": {
            "type": "number",
            "nullable": true
          },
          "skip": {
            "type": "number",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenFoodProductSummaryDto"
            }
          }
        },
        "required": [
          "products"
        ]
      },
      "FoodSearchCriteriaDto": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search terms to use in the search.",
            "example": "Cheddar cheese"
          },
          "dataType": {
            "type": "array",
            "description": "Filter on a specific data type.",
            "example": [
              "Foundation",
              "SR Legacy"
            ],
            "items": {
              "type": "string",
              "enum": [
                "Branded",
                "Foundation",
                "Survey (FNDDS)",
                "SR Legacy"
              ]
            }
          },
          "pageSize": {
            "type": "number",
            "description": "Maximum number of results to return. Default is 50.",
            "example": 25,
            "minimum": 1,
            "maximum": 200
          },
          "pageNumber": {
            "type": "number",
            "description": "Page number to retrieve.",
            "example": 2
          },
          "sortBy": {
            "type": "string",
            "description": "Field to sort the results by.",
            "enum": [
              "dataType.keyword",
              "lowercaseDescription.keyword",
              "fdcId",
              "publishedDate"
            ],
            "example": "lowercaseDescription.keyword"
          },
          "sortOrder": {
            "type": "string",
            "description": "The sort direction for the results.",
            "enum": [
              "asc",
              "desc"
            ],
            "example": "asc"
          },
          "brandOwner": {
            "type": "string",
            "description": "Filter results based on the brand owner.",
            "example": "Kar Nut Products Company"
          },
          "tradeChannel": {
            "type": "array",
            "description": "Filter foods containing any of the specified trade channels.",
            "example": [
              "CHILD_NUTRITION_FOOD_PROGRAMS",
              "GROCERY"
            ],
            "items": {
              "type": "string",
              "enum": [
                "CHILD_NUTRITION_FOOD_PROGRAMS",
                "DRUG",
                "FOOD_SERVICE",
                "GROCERY",
                "MASS_MERCHANDISING",
                "MILITARY",
                "ONLINE",
                "VENDING"
              ]
            }
          },
          "startDate": {
            "type": "string",
            "description": "Filter foods published on or after this date. Format: YYYY-MM-DD",
            "example": "2021-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "Filter foods published on or before this date. Format: YYYY-MM-DD",
            "example": "2021-12-30"
          }
        },
        "required": [
          "query"
        ]
      },
      "AbridgedFoodNutrientDto": {
        "type": "object",
        "properties": {
          "nutrientId": {
            "type": "number",
            "example": 1008,
            "description": "The ID of the nutrient."
          },
          "nutrientName": {
            "type": "string",
            "example": "Protein",
            "description": "The name of the nutrient."
          },
          "unitName": {
            "type": "string",
            "example": "g",
            "description": "The unit of the nutrient measurement."
          },
          "value": {
            "type": "number",
            "example": 25,
            "description": "The value of the nutrient."
          }
        },
        "required": [
          "nutrientId",
          "nutrientName",
          "unitName",
          "value"
        ]
      },
      "SearchResultFoodDto": {
        "type": "object",
        "properties": {
          "fdcId": {
            "type": "number",
            "description": "Unique ID of the food.",
            "example": 45001529
          },
          "dataType": {
            "type": "string",
            "description": "The type of the food data.",
            "example": "Branded"
          },
          "description": {
            "type": "string",
            "description": "The description of the food.",
            "example": "BROCCOLI"
          },
          "foodCode": {
            "type": "string",
            "description": "Any A unique ID identifying the food within FNDDS."
          },
          "foodNutrients": {
            "description": "List of nutrients for the food.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbridgedFoodNutrientDto"
            }
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the item was published to FDC.",
            "example": "4/1/2019"
          },
          "scientificName": {
            "type": "string",
            "description": "The scientific name of the food."
          },
          "brandOwner": {
            "type": "string",
            "description": "Brand owner for the food. Only applies to Branded Foods.",
            "example": "Supervalu, Inc."
          },
          "gtinUpc": {
            "type": "string",
            "description": "GTIN or UPC code identifying the food. Only applies to Branded Foods.",
            "example": "041303020937"
          },
          "ingredients": {
            "type": "string",
            "description": "The list of ingredients (as it appears on the product label). Only applies to Branded Foods."
          },
          "ndbNumber": {
            "type": "number",
            "description": "Unique number assigned for foundation foods. Only applies to Foundation and SRLegacy Foods."
          },
          "additionalDescriptions": {
            "type": "string",
            "description": "Any additional descriptions of the food.",
            "example": "Coon; sharp cheese; Tillamook; Hoop; Pioneer; New York; Wisconsin; Longhorn"
          },
          "allHighlightFields": {
            "type": "string",
            "description": "allHighlightFields"
          },
          "score": {
            "type": "number",
            "description": "Relative score indicating how well the food matches the search criteria.",
            "format": "float"
          }
        },
        "required": [
          "fdcId",
          "description"
        ]
      },
      "SearchResultDto": {
        "type": "object",
        "properties": {
          "foodSearchCriteria": {
            "description": "The criteria used for the food search.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FoodSearchCriteriaDto"
              }
            ]
          },
          "totalHits": {
            "type": "number",
            "description": "The total number of foods found matching the search criteria.",
            "example": 1034
          },
          "currentPage": {
            "type": "number",
            "description": "The current page of results being returned.",
            "example": 1
          },
          "totalPages": {
            "type": "number",
            "description": "The total number of pages found matching the search criteria.",
            "example": 21
          },
          "foods": {
            "description": "The list of foods found matching the search criteria.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResultFoodDto"
            }
          }
        },
        "required": [
          "foodSearchCriteria",
          "totalHits",
          "currentPage",
          "totalPages",
          "foods"
        ]
      }
    }
  }
}